package gfx;

import processing.core.*;
import traer.physics.*;
import java.util.*;

public class RainstickObject {

    PApplet parent;

    ArrayList<Particle> grains;
    ParticleSystem ps;

    private int length;
    private int width = 200;

    public RainstickObject( PApplet parent, ParticleSystem ps ) {
	this.parent = parent;
	this.ps = ps;

	grains = new ArrayList<Particle>();
	// insert 20 grains
	for ( int i=0; i<20; i++ ) {
	    grains.add( ps.makeParticle(10.0f,
					(int)(Math.random()*width) - width/2,
					(int)(Math.random()*length) - length/2,
					0) );
	}

	// Default length
	length = 400;
	    
    }
    
    private void checkBounds() {
	for ( Particle grain : grains ) {
	    if ( grain.position().x() > width/2 )
		grain.velocity().set( -grain.velocity().x(),
				      grain.velocity().y(),
				      0 );
	    if ( grain.position().x() < -width/2 )
		grain.velocity().set( -grain.velocity().x(),
				      grain.velocity().y(),
				      0 );
	    if ( grain.position().y() > length/2 )
		grain.velocity().set( grain.velocity().x(),
				      -grain.velocity().y(),
				      0 );
	    if ( grain.position().y() < -length/2 )
		grain.velocity().set( grain.velocity().x(),
				      -grain.velocity().y(),
				      0 );
	}
    }

    public void render() {
	checkBounds();

	parent.strokeWeight( 0 );
	parent.fill( 180, 0, 30, 255 );
	
	for ( Particle grain : grains ) {
	    parent.pushMatrix();
	    parent.translate( grain.position().x(),
			      grain.position().y() );

	    parent.ellipse( 0, 0, 10, 10 );
	    parent.popMatrix();
	}

	parent.strokeWeight( 1 );
	parent.stroke( 200, 200, 200 );
	parent.fill( 220, 220, 255, 100 );
	parent.rectMode( parent.CENTER );
	parent.rect( 0, 0, width, length );

    }

}